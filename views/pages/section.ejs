<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../components/head', { title: text[user.section + 'Chat' ] }) %>
</head>

<body>
  <%- include('../components/header', { title: text[user.section + 'Chat' ] }) %>
    <%- include('../components/nav') %>
      <main>
        <%- include('../components/connectedUsers') %>
          <%- include('../components/chats') %>
            <%- include('../components/inputMessages') %>
      </main>
      <script src="/socket.io/socket.io.js"></script>
      <script src="../scripts/chat.js"></script>
      <script>
        const socket = io();
        const chatId = "<%= user.section %>";
        const userId = "<%= user.id %>";
        const username = "<%= user.username %>";
        const userIsCertified = "<%= user.isCertified %>";
        const userColor = "<%= user.color %>";
        const userImage = "<%= user.image %>";

        socket.on('message', (data) => {
          printMsg(data);
        });

        socket.on("connectedUsers", (users) => {
          document.getElementById('connectedUsers').textContent = users.length;
          document.getElementById('connectedUsersText').textContent = users.length > 1 ? "<%= text['connectedUsers'] %>" : "<%= text['connectedUser'] %>";
        });

        document.querySelector('form').addEventListener('submit', (event) => {
          event.preventDefault();
          sendMessage();
        });

        document.getElementById('inputMsg').addEventListener('keydown', (event) => {
          if (event.key === 'Enter' && !event.shiftKey) {
            event.preventDefault();
            sendMessage();
          }
        });

        function sendMessage() {
          const message = document.getElementById('inputMsg').value.trim();
          if (message.length > 0) {
            socket.emit('message', chatId, message, username, userId, userIsCertified, userColor, userImage);
            document.getElementById('inputMsg').value = '';
          }
        }

        window.addEventListener('beforeunload', () => {
          isDisconnected = true;
          socket.emit('disconnection', chatId, username);
        });

        window.addEventListener('unload', () => {
          if (!isDisconnected) {
            socket.emit('disconnection', chatId, username);
          }
        });
      </script>
</body>

</html>