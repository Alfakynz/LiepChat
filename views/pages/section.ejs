<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../components/head', { title: text[user.section + 'Chat' ] }) %>
</head>

<body>
  <%- include('../components/header', { title: text[user.section + 'Chat' ] }) %>
    <main>
      <section>
        <a href="/welcome">
          <%= text['welcome'] %>
        </a>
      </section>
      <section>
        <h3>
          <span id="connectedUsers">0</span>
        </h3>
      </section>
      <section>
        <ul id="messages"></ul>
      </section>
      <section>
        <form id="form" action="">
          <input type="text" id="inputMsg" />
          <button class="send">
            <%= text['send'] %>
          </button>
        </form>
      </section>
    </main>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      const socket = io();
      const chatId = "<%= user.section %>";
      const userId = "<%= user.id %>";
      const username = "<%= user.username %>";
      const userIsCertified = "<%= user.isCertified %>";
      const userColor = "<%= user.color %>";
      const userImage = "<%= user.image %>";

      document.addEventListener("DOMContentLoaded", () => {
        socket.emit('connection', chatId, username);
      });

      socket.on('message', (data) => {
        const messages = document.getElementById('messages');
        const newMessage = document.createElement('li');
        newMessage.innerHTML = data;
        messages.appendChild(newMessage);
        window.scrollTo(0, document.body.scrollHeight);
      });

      socket.on("connectedUsers", (users) => {
        document.getElementById('connectedUsers').textContent = users.length;
      });

      document.querySelector('form').addEventListener('submit', (event) => {
        event.preventDefault();
        sendMessage();
      });

      document.getElementById('inputMsg').addEventListener('keydown', (event) => {
        if (event.key === 'Enter' && !event.shiftKey) {
          event.preventDefault();
          sendMessage();
        }
      });

      function sendMessage() {
        const message = document.getElementById('inputMsg').value.trim();
        if (message.length > 0) {
          socket.emit('message', chatId, message, username, userId, userIsCertified, userColor, userImage);
          document.getElementById('inputMsg').value = '';
        }
      }

      window.addEventListener('beforeunload', () => {
        isDisconnected = true;
        socket.emit('disconnection', chatId, username);
      });

      window.addEventListener('unload', () => {
        if (!isDisconnected) {
          socket.emit('disconnection', chatId, username);
        }
      });
    </script>
</body>

</html>