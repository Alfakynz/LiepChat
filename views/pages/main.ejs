<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../components/head', { title: text['mainChat'] }) %>
</head>

<body>
  <%- include('../components/header', { title: text['mainChat'] }) %>
    <%- include('../components/nav') %>
      <main>
        <section class="connectedUsers">
          <h3>
            <span id="connectedUsers">0</span>
            <span id="connectedUsersText">
              <%= text['connectedUser'] %>
            </span>
          </h3>
        </section>
        <section>
          <div id="chat-box" class="chat-box"></div>
        </section>
        <section>
          <form id="form" action="">
            <textarea id="inputMsg" maxlength="500"></textarea>
            <button class="send">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="512" height="512">
                <g id="_01_align_center" data-name="01 align center">
                  <path
                    d="M1.444,6.669a2,2,0,0,0-.865,3.337l3.412,3.408V20h6.593l3.435,3.43a1.987,1.987,0,0,0,1.408.588,2.034,2.034,0,0,0,.51-.066,1.978,1.978,0,0,0,1.42-1.379L23.991.021ZM2,8.592l17.028-5.02L5.993,16.586v-4Zm13.44,13.424L11.413,18h-4L20.446,4.978Z" />
                </g>
              </svg>
            </button>
          </form>
        </section>
      </main>
      <script src="/socket.io/socket.io.js"></script>
      <script>
        const socket = io();
        const chatId = "main";
        const userId = "<%= user.id %>";
        const username = "<%= user.username %>";
        const userIsCertified = "<%= user.isCertified %>" == "true";
        const userColor = "<%= user.color %>";
        const userImage = "<%= user.image %>";

        function detectDevice() {
          const userAgent = navigator.userAgent.toLowerCase();
          if (/mobile/i.test(userAgent)) {
            return 'mobile';
          } else if (/tablet|ipad|playbook|silk/i.test(userAgent)) {
            return 'tablet';
          } else {
            return 'computer';
          }
        }

        document.addEventListener("DOMContentLoaded", () => {
          socket.emit('connection', chatId, username);
          if (detectDevice() == 'computer') {
            document.getElementById('inputMsg').focus();
          }
        });

        socket.on('message', (data) => {
          const chatBox = document.getElementById('chat-box');
          const newMessage = document.createElement('div');
          newMessage.classList.add('message');
          newMessage.innerHTML = data;
          chatBox.appendChild(newMessage);
          window.scrollTo(0, document.body.scrollHeight);
        });

        socket.on("connectedUsers", (users) => {
          document.getElementById('connectedUsers').textContent = users.length;
          document.getElementById('connectedUsersText').textContent = users.length > 1 ? "<%= text['connectedUsers'] %>" : "<%= text['connectedUser'] %>";
        });

        document.querySelector('form').addEventListener('submit', (event) => {
          event.preventDefault();
          sendMessage();
        });

        document.getElementById('inputMsg').addEventListener('keydown', (event) => {
          if (event.key === 'Enter' && !event.shiftKey) {
            event.preventDefault();
            sendMessage();
          }
        });

        function sendMessage() {
          const message = document.getElementById('inputMsg').value.trim();
          if (message.length > 0) {
            socket.emit('message', chatId, message, username, userId, userIsCertified, userColor, userImage);
            document.getElementById('inputMsg').value = '';
          }
        }

        window.addEventListener('beforeunload', () => {
          isDisconnected = true;
          socket.emit('disconnection', chatId, username);
        });

        window.addEventListener('unload', () => {
          if (!isDisconnected) {
            socket.emit('disconnection', chatId, username);
          }
        });

        window.addEventListener('scroll', function () {
          let textarea = document.querySelector('textarea');
          let connectedUsers = document.querySelector('.connectedUsers');

          if (window.scrollY === 0) {
            connectedUsers.style.borderRadius = '25px';
          } else if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {
            textarea.style.borderRadius = '25px';
          } else {
            textarea.style.borderRadius = '25px 25px 0 0';
            connectedUsers.style.borderRadius = '0 0 25px 25px';
          }
        });
      </script>
</body>

</html>